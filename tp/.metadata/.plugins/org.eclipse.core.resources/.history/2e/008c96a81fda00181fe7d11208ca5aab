package com.example.demo.tp.connectorjdbc.controller.copy;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.tp.connectorjdbc.DescuentoRepository;
import com.example.demo.tp.connectorjdbc.GastoFijoRepository;
import com.example.demo.tp.connectorjdbc.ProductoRepository;
import com.example.demo.tp.model.Descuento;
import com.example.demo.tp.model.GastoFijo;
import com.example.demo.tp.model.Producto;

@Controller
@RequestMapping(path="/local")
public class DataBaseController {
	@Autowired
	private ProductoRepository productoRepository;
	@Autowired
	private DescuentoRepository descuentoRepository;
	@Autowired
	private GastoFijoRepository GastoFijoRepository;
	
	@GetMapping(path="/producto/add") // Map ONLY GET Requests
	public @ResponseBody String addNewProducto (@RequestParam String descripcion
			, @RequestParam double costo, double precio_venta, @RequestParam String id) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Producto p = new Producto();
		p.setId(id);
		p.setDescripcion(descripcion);
		p.setCosto(costo);
		p.setPrecioVenta(precio_venta);
		productoRepository.save(p);
		return "Saved";
	}
	
	@GetMapping(path="/producto/all")
	public @ResponseBody Iterable<Producto> getAllProducto() {
		// This returns a JSON or XML with the users
		return productoRepository.findAll();
	}
	
	@GetMapping(path="/descuento/add") // Map ONLY GET Requests
	public @ResponseBody String addNewDescuento(@RequestParam double cantidad, 
			double porcentaje, @RequestParam String id_producto) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Descuento d = new Descuento();
		d.setIdProducto(id_producto);
		d.setCantidad(cantidad);
		d.setPorcentaje(porcentaje);
		descuentoRepository.save(d);
		return "Saved";
	}
	
	@GetMapping(path="/descuento/all")
	public @ResponseBody Iterable<Descuento> getAllDescuento() {
		// This returns a JSON or XML with the users
		return descuentoRepository.findAll();
	}
	
	@GetMapping(path="/gastoFijo/add") // Map ONLY GET Requests
	public @ResponseBody String addNewGastoFijo(@RequestParam String descripcion, 
			double monto, @RequestParam String id) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		GastoFijo g = new GastoFijo();
		g.setId(id);
		g.setMonto(monto);
		g.setDescripcion(descripcion);
		GastoFijoRepository.save(g);
		return "Saved";
	}
	
	@GetMapping(path="/gastoFijo/all")
	public @ResponseBody Iterable<GastoFijo> getAllGastosFijos() {
		// This returns a JSON or XML with the users
		return GastoFijoRepository.findAll();
	}
	
	

}
